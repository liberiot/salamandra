'use strict';// sudo chmod 666 /dev/ttyUSB0
var _parser=require('./mqtt/parser');var _parser2=_interopRequireDefault(_parser);var _liberiot=require('./liberiot');var _liberiot2=_interopRequireDefault(_liberiot);var _mqttClient=require('./mqtt/mqttClient');var _mqttClient2=_interopRequireDefault(_mqttClient);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var config=require('../config');var SerialPort=require('serialport');var CONTROL='control';var ACTION_TOPIC=3;// const CONTROL_TOPIC = 'liberiot/' + config.liberiot.user_key + '/control/#';
var port=new SerialPort(config.serial.port,{baudRate:config.serial.speed,parser:SerialPort.parsers.readline('\n')});_mqttClient2.default.on('connect',function(){return _mqttClient2.default.subscribe('#')});var liberiot=new _liberiot2.default;var liberiotClient=liberiot.getLiberiotMqtt();var onData=function onData(a){if(a[0]==='('&a[5]===')'){var b=a.toString().slice(0,a.length-1);publishLocal(b);liberiot.publish(b)}};function publishLocal(a){var b=(0,_parser2.default)(a);if(b){_mqttClient2.default.publish('local/data/'+b.uid.full+'/'+b.reg,JSON.stringify(b));console.log('Transmission published at local/'+b.uid.full+'/'+b.reg)}}var onError=function onError(a){if(a.toString()==='Error: Error: Permission denied, cannot open /dev/ttyUSB0'){var b=a.toString();var c=b.split(' ');var d=c[c.length-1];console.log('Permission denied, please try \'chmod 666 '+d+'\'')}else{console.log(a)}};port.on('error',function(a){return onError(a)});port.on('data',function(a){return onData(a)});_mqttClient2.default.on('message',echoLocalMessage);liberiotClient.on('message',echoLibeirotMessage);function echoLocalMessage(a,b){var c=a.split('/');if(c[ACTION_TOPIC]===CONTROL){var d=b+'\r';var e=new Buffer(d);port.write(e,function(f){return f?console.log('Error on write '+f.message):console.log('Message written: '+d.toString())})}}function echoLibeirotMessage(a,b){var c=b.toString();var d=a.split('/');if(d[ACTION_TOPIC]===CONTROL){var e=c+'\r';var f=new Buffer(e);port.write(f,function(g){return g?console.log('Error on write '+g.message):console.log('Message written: '+e.toString())})}}